{"ast":null,"code":"var _jsxFileName = \"/Users/ploy/Desktop/ployportfolio/client/src/components/AboutMe/AboutMe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './aboutme.css';\nimport AWS from '../../assets/images/AWS.svg';\nimport Cloudflare from '../../assets/images/Cloudflare.svg';\nimport RasberryPi from '../../assets/images/RasberryPi.svg';\nimport HTML5 from '../../assets/images/HTML5.svg';\nimport CSS from '../../assets/images/CSS.svg';\nimport JavaScript from '../../assets/images/JavaScript.svg';\nimport TypeScript from '../../assets/images/TypeScript.svg';\nimport Python from '../../assets/images/Python.svg';\nimport ReactLogo from '../../assets/images/React.png';\nimport MaterialUI from '../../assets/images/MaterialUI.svg';\nimport Git from '../../assets/images/Git.svg';\nimport GitHub from '../../assets/images/GitHub.svg';\nimport JQuery from '../../assets/images/JQuery.svg';\nimport NodeJS from '../../assets/images/NodeJS.svg';\nimport Express from '../../assets/images/Express.svg';\nimport MongoDB from '../../assets/images/MongoDB.svg';\nimport PostgreSQL from '../../assets/images/PostgreSQL.png';\nimport Docker from '../../assets/images/Docker.png';\nimport Websocket from '../../assets/images/Websocket.png';\nimport RabbitMQ from '../../assets/images/RabbitMQ.svg';\nimport CICD from '../../assets/images/CICD.png';\nimport Redis from '../../assets/images/Redis.svg';\nimport Redux from '../../assets/images/Redux.svg';\nimport SQLite from '../../assets/images/SQLite.svg';\nimport Postman from '../../assets/images/Postman.png';\nimport Supabase from '../../assets/images/Supabase.svg';\nimport Jest from '../../assets/images/Jest.svg';\nimport Jira from '../../assets/images/Jira.png';\nimport Vite from '../../assets/images/Vite.svg';\nimport Webpack from '../../assets/images/Webpack.svg';\nimport PloyPic from '../../assets/images/ploy4.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AboutMe() {\n  _s();\n  const techSkills = [AWS, Cloudflare, RasberryPi, HTML5, CSS, JavaScript, TypeScript, Python, ReactLogo, MaterialUI, Git, GitHub, JQuery, NodeJS, Express, MongoDB, PostgreSQL, Docker, Websocket, RabbitMQ, CICD, Redis, Redux, SQLite, Postman, Supabase, Jest, Jira, Vite, Webpack];\n  const experiencesRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const items = entry.target.querySelectorAll('.experience-item');\n          items.forEach((item, index) => {\n            setTimeout(() => item.classList.add('animate'), index * 200);\n          });\n        }\n      });\n    }, {\n      threshold: 0.2\n    });\n    const experiences = experiencesRef.current;\n    if (experiences) observer.observe(experiences);\n    return () => {\n      if (experiences) observer.unobserve(experiences);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutme-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: PloyPic,\n        alt: \"Ploy\",\n        className: \"mypic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aboutme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aboutme-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"I'm Ploy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"I'm a software engineer. I enjoy tackling complex problems. My main focus is on JavaScript/TypeScript, React, Node.js, and I also specialize in both NoSQL and SQL databases.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Outside of work, I enjoy outdoor runs as a form of meditation, experimenting with Thai-Italian fusion cuisine in my kitchen, and tinkering with AI-enhanced home automation systems. When winter comes, you\\u2019ll find me shredding the slopes on my snowboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), \"Growing up in Thailand taught me the value of adaptability and collaboration, which I bring to every team I work with.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), \"\\\"I am a hard worker who stays determined and persistent until I achieve my goals.\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"experiences\",\n        ref: experiencesRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"ex-header\",\n          children: \"MY EXPERIENCES.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), [{\n          company: \"OSLabs | DeClustor\",\n          role: \"Software Engineer\",\n          year: \"2024~\"\n        }, {\n          company: \"Petder Better\",\n          role: \"Software Engineer\",\n          year: \"2024\"\n        }, {\n          company: \"LunchBox\",\n          role: \"Software Engineer\",\n          year: \"2024\"\n        }, {\n          company: \"Jumpa Co-op\",\n          role: \"Shift Lead/Hospitality Specialist\",\n          year: \"2018-2023\"\n        }, {\n          company: \"Jumpa Co-op\",\n          role: \"Product Manager (Intern)\",\n          year: \"2017-2018\"\n        }, {\n          company: \"Mitr Phol Group\",\n          role: \"Export and Logistic Operator\",\n          year: \"2013-2015\"\n        }, {\n          company: \"Mitr Phol Group\",\n          role: \"Procurement Officer\",\n          year: \"2012-2013\"\n        }].map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"experience-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: exp.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: exp.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"year\",\n            children: exp.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tech-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MY SKILLS.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tech-slider\",\n        children: [...techSkills, ...techSkills].map((src, index) => {\n          const techName = src.split('/').pop().split('.')[0];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: src,\n              alt: techName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltip\",\n              children: techName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AboutMe, \"F871eDGXC842r03XKXorBnsa1Fk=\");\n_c = AboutMe;\nexport default AboutMe;\nvar _c;\n$RefreshReg$(_c, \"AboutMe\");","map":{"version":3,"names":["React","useEffect","useRef","AWS","Cloudflare","RasberryPi","HTML5","CSS","JavaScript","TypeScript","Python","ReactLogo","MaterialUI","Git","GitHub","JQuery","NodeJS","Express","MongoDB","PostgreSQL","Docker","Websocket","RabbitMQ","CICD","Redis","Redux","SQLite","Postman","Supabase","Jest","Jira","Vite","Webpack","PloyPic","jsxDEV","_jsxDEV","AboutMe","_s","techSkills","experiencesRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","items","target","querySelectorAll","item","index","setTimeout","classList","add","threshold","experiences","current","observe","unobserve","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","company","role","year","map","exp","techName","split","pop","_c","$RefreshReg$"],"sources":["/Users/ploy/Desktop/ployportfolio/client/src/components/AboutMe/AboutMe.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './aboutme.css';\nimport AWS from '../../assets/images/AWS.svg';\nimport Cloudflare from '../../assets/images/Cloudflare.svg';\nimport RasberryPi from '../../assets/images/RasberryPi.svg';\nimport HTML5 from '../../assets/images/HTML5.svg';\nimport CSS from '../../assets/images/CSS.svg';\nimport JavaScript from '../../assets/images/JavaScript.svg';\nimport TypeScript from '../../assets/images/TypeScript.svg';\nimport Python from '../../assets/images/Python.svg';\nimport ReactLogo from '../../assets/images/React.png';\nimport MaterialUI from '../../assets/images/MaterialUI.svg';\nimport Git from '../../assets/images/Git.svg';\nimport GitHub from '../../assets/images/GitHub.svg';\nimport JQuery from '../../assets/images/JQuery.svg';\nimport NodeJS from '../../assets/images/NodeJS.svg';\nimport Express from '../../assets/images/Express.svg';\nimport MongoDB from '../../assets/images/MongoDB.svg';\nimport PostgreSQL from '../../assets/images/PostgreSQL.png';\nimport Docker from '../../assets/images/Docker.png';\nimport Websocket from '../../assets/images/Websocket.png';\nimport RabbitMQ from '../../assets/images/RabbitMQ.svg';\nimport CICD from '../../assets/images/CICD.png';\nimport Redis from '../../assets/images/Redis.svg';\nimport Redux from '../../assets/images/Redux.svg';\nimport SQLite from '../../assets/images/SQLite.svg';\nimport Postman from '../../assets/images/Postman.png';\nimport Supabase from '../../assets/images/Supabase.svg';\nimport Jest from '../../assets/images/Jest.svg';\nimport Jira from '../../assets/images/Jira.png';\nimport Vite from '../../assets/images/Vite.svg';\nimport Webpack from '../../assets/images/Webpack.svg';\nimport PloyPic from '../../assets/images/ploy4.png';\n\nfunction AboutMe() {\n  const techSkills = [\n    AWS, Cloudflare, RasberryPi, HTML5, CSS, JavaScript, TypeScript, Python, \n    ReactLogo, MaterialUI, Git, GitHub, JQuery, NodeJS, Express, MongoDB, \n    PostgreSQL, Docker, Websocket, RabbitMQ, CICD, Redis, Redux, SQLite, \n    Postman, Supabase, Jest, Jira, Vite, Webpack\n  ];\n\n  const experiencesRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const items = entry.target.querySelectorAll('.experience-item');\n            items.forEach((item, index) => {\n              setTimeout(() => item.classList.add('animate'), index * 200);\n            });\n          }\n        });\n      },\n      { threshold: 0.2 }\n    );\n\n    const experiences = experiencesRef.current;\n    if (experiences) observer.observe(experiences);\n\n    return () => {\n      if (experiences) observer.unobserve(experiences);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"aboutme-wrapper\">\n        <img src={PloyPic} alt=\"Ploy\" className=\"mypic\" />\n\n        <div className=\"aboutme-container\">\n          <div className=\"aboutme-header\">\n            <h1>I'm Ploy.</h1>\n          </div>\n          <h2>\n            I'm a software engineer. I enjoy tackling complex problems. My main\n            focus is on JavaScript/TypeScript, React, Node.js, and I also\n            specialize in both NoSQL and SQL databases.\n          </h2>\n          <p>\n            Outside of work, I enjoy outdoor runs as a form of meditation,\n            experimenting with Thai-Italian fusion cuisine in my kitchen, and\n            tinkering with AI-enhanced home automation systems. When winter\n            comes, you’ll find me shredding the slopes on my snowboard.\n          </p>\n          <p>\n            <br />\n            Growing up in Thailand taught me the value of adaptability and\n            collaboration, which I bring to every team I work with.\n          </p>\n          <p>\n            <br />\n            \"I am a hard worker who stays determined and persistent until I\n            achieve my goals.\"\n          </p>\n        </div>\n\n        <div className=\"experiences\" ref={experiencesRef}>\n          <h1 id=\"ex-header\">MY EXPERIENCES.</h1>\n          {[\n            { company: \"OSLabs | DeClustor\", role: \"Software Engineer\", year: \"2024~\" },\n            { company: \"Petder Better\", role: \"Software Engineer\", year: \"2024\" },\n            { company: \"LunchBox\", role: \"Software Engineer\", year: \"2024\" },\n            { company: \"Jumpa Co-op\", role: \"Shift Lead/Hospitality Specialist\", year: \"2018-2023\" },\n            { company: \"Jumpa Co-op\", role: \"Product Manager (Intern)\", year: \"2017-2018\" },\n            { company: \"Mitr Phol Group\", role: \"Export and Logistic Operator\", year: \"2013-2015\" },\n            { company: \"Mitr Phol Group\", role: \"Procurement Officer\", year: \"2012-2013\" },\n          ].map((exp, index) => (\n            <div key={index} className=\"experience-item\">\n              <div>\n                <h1>{exp.company}</h1>\n                <p>{exp.role}</p>\n              </div>\n              <h1 className=\"year\">{exp.year}</h1>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"tech-container\">\n        <h1>MY SKILLS.</h1>\n        <div className=\"tech-slider\">\n          {[...techSkills, ...techSkills].map((src, index) => {\n            const techName = src.split('/').pop().split('.')[0];\n            return (\n              <div key={index} className=\"tooltip-container\">\n                <img src={src} alt={techName} />\n                <span className=\"tooltip\">{techName}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutMe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}